{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mayis01/Desktop/musicBandFrontEnd/src/components/HomePageComponents/HomePageComponent.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/HomePageComponents/HomePageComponent.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/HomePageComponents/HomePageComponent.tsx <module evaluation>\",\n    \"default\",\n);\nexport const metadata = registerClientReference(\n    function() { throw new Error(\"Attempted to call metadata() from the server but metadata is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/HomePageComponents/HomePageComponent.tsx <module evaluation>\",\n    \"metadata\",\n);\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2T,GACxV,yFACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yFACA","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/mayis01/Desktop/musicBandFrontEnd/src/components/HomePageComponents/HomePageComponent.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/HomePageComponents/HomePageComponent.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/HomePageComponents/HomePageComponent.tsx\",\n    \"default\",\n);\nexport const metadata = registerClientReference(\n    function() { throw new Error(\"Attempted to call metadata() from the server but metadata is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/HomePageComponents/HomePageComponent.tsx\",\n    \"metadata\",\n);\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qEACA","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/mayis01/Desktop/musicBandFrontEnd/app/page.tsx"],"sourcesContent":["'use server';\n\nimport React from 'react';\nimport HomePageComponent from '@components/HomePageComponents/HomePageComponent';\n\nexport const metadata = {\n  title: 'Blog',\n  openGraph: {\n    title: 'Blog',\n  },\n};\n\n// Output:\n// <title>Blog</title>\n// <meta property=\"og:title\" content=\"Blog\" />\n\nexport const HomePage = async () => {\n  return <HomePageComponent />;\n};\n\nexport default HomePage;\n"],"names":[],"mappings":";;;;;;;;AAGA;;;;;;AAEO,MAAM,uCAAM,GAAN,WAAW;IACtB,OAAO;IACP,WAAW;QACT,OAAO;IACT;AACF;AAMO,MAAM,uCAAM,GAAN,WAAW;IACtB,qBAAO,8OAAC,6JAAA,CAAA,UAAiB;;;;;AAC3B;uCAEe,uCAAM,GAAN;;;IAfF;IAWA;IAIE;;AAfF,+OAAA;AAWA,+OAAA;AAIE,+OAAA","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/mayis01/Desktop/musicBandFrontEnd/app/actions/serverActions.ts"],"sourcesContent":["'use server';\nexport const fetchLazyData = async (url: string) => {\n    \n  const response = await fetch(url);\n  return response.json();\n};\n"],"names":[],"mappings":";;;;;;;;AACO,MAAM,uCAAW,GAAX,gBAAgB,OAAO;IAElC,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAO,SAAS,IAAI;AACtB;;;IAJa;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}